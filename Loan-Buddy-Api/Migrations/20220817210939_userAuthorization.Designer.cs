// <auto-generated />
using System;
using Loan_Buddy_Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Loan_Buddy_Api.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20220817210939_userAuthorization")]
    partial class userAuthorization
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Loan_Buddy_Api.Data.LoanAgreement", b =>
                {
                    b.Property<int>("LoanAgreementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanAgreementId"), 1L, 1);

                    b.Property<int?>("BorrowerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LenderId")
                        .HasColumnType("int");

                    b.Property<int>("MonthlyPaymentAmount")
                        .HasColumnType("int");

                    b.Property<int>("OriginalAmount")
                        .HasColumnType("int");

                    b.Property<int>("RemainingTotal")
                        .HasColumnType("int");

                    b.Property<bool>("SignedByBorrower")
                        .HasColumnType("bit");

                    b.Property<bool>("SignedByLender")
                        .HasColumnType("bit");

                    b.HasKey("LoanAgreementId");

                    b.HasIndex("BorrowerId");

                    b.HasIndex("LenderId");

                    b.ToTable("LoanAgreements");

                    b.HasData(
                        new
                        {
                            LoanAgreementId = 1,
                            BorrowerId = 1,
                            DateCreated = new DateTime(2022, 8, 17, 15, 9, 39, 213, DateTimeKind.Local).AddTicks(5680),
                            LenderId = 2,
                            MonthlyPaymentAmount = 240,
                            OriginalAmount = 24242,
                            RemainingTotal = 2424,
                            SignedByBorrower = false,
                            SignedByLender = false
                        });
                });

            modelBuilder.Entity("Loan_Buddy_Api.Data.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoanAgreementId")
                        .HasColumnType("int");

                    b.Property<bool>("ProofOfPayment")
                        .HasColumnType("bit");

                    b.Property<int>("RemainingTotal")
                        .HasColumnType("int");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TransactionId");

                    b.HasIndex("LoanAgreementId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            TransactionId = 1,
                            Amount = 55,
                            Date = new DateTime(2022, 8, 17, 15, 9, 39, 213, DateTimeKind.Local).AddTicks(5770),
                            LoanAgreementId = 1,
                            ProofOfPayment = false,
                            RemainingTotal = 2324,
                            TransactionType = "Cash"
                        });
                });

            modelBuilder.Entity("Loan_Buddy_Api.Data.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "bill@gmail.com",
                            Name = "Bill"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "Janet@gmail.com",
                            Name = "Janet"
                        });
                });

            modelBuilder.Entity("Loan_Buddy_Api.Data.LoanAgreement", b =>
                {
                    b.HasOne("Loan_Buddy_Api.Data.User", "BorrowerDetail")
                        .WithMany()
                        .HasForeignKey("BorrowerId");

                    b.HasOne("Loan_Buddy_Api.Data.User", "LenderDetail")
                        .WithMany()
                        .HasForeignKey("LenderId");

                    b.Navigation("BorrowerDetail");

                    b.Navigation("LenderDetail");
                });

            modelBuilder.Entity("Loan_Buddy_Api.Data.Transaction", b =>
                {
                    b.HasOne("Loan_Buddy_Api.Data.LoanAgreement", null)
                        .WithMany("Transactions")
                        .HasForeignKey("LoanAgreementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Loan_Buddy_Api.Data.LoanAgreement", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
